{
	"info": {
		"_postman_id": "9a101007-4d66-4de2-bc4a-f5f79c312f78",
		"name": "Team08_API_Testers",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37364520",
		"_collection_link": "https://interstellar-space-75333.postman.co/workspace/72442ad8-b6bd-47d3-8d9b-4c96981108fa/collection/37364520-9a101007-4d66-4de2-bc4a-f5f79c312f78?action=share&source=collection_link&creator=37364520"
	},
	"item": [
		{
			"name": "Positive Scenarios",
			"item": [
				{
					"name": "Admin Role",
					"item": [
						{
							"name": "User Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"pm.environment.set ('adminToken',response.token);\r",
											"//pm.execution.setNextRequest ('Create Dietician');\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"{{adminPswd}}\",\r\n  \"userLoginEmail\": \"{{adminEmail}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Dietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"let dieticianIds =pm.environment.get('dieticianIds')||[];\r",
											"pm.environment.set ('dieticianEmail',response.Email);\r",
											"pm.environment.set ('dieticianPswd',response.loginPassword);\r",
											"let dieticianId = response.id;\r",
											"dieticianIds.push(dieticianId);\r",
											"pm.environment.set ('dieticianIds',dieticianIds);\r",
											"if (dieticianIds.length >= 2) {\r",
											"    pm.environment.set('dietIdForDietModule', dieticianIds[0]);\r",
											"    pm.environment.set ('dietIdForDietRole',dieticianIds[1]);\r",
											"} else {\r",
											"    console.log('Not enough dietician IDs available');\r",
											"}\r",
											"console.log('dietician ids are ',dieticianIds);\r",
											"console.log('first dietician id ',pm.environment.get ('dietIdForDietModule'));\r",
											"\r",
											"console.log('second dietician id ',pm.environment.get ('dietIdForDietRole'));\r",
											"//pm.execution.setNextRequest('Update Dietician by DieticianId');"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ContactNumber\": \"{{ContactNumber}}\",\r\n  \"DateOfBirth\": \"{{DateOfBirth}}\",\r\n  \"Education\": \"{{Education}}\",\r\n  \"Email\": \"{{Email}}\",\r\n  \"Firstname\": \"{{Firstname}}\",\r\n  \"HospitalCity\": \"{{HospitalCity}}\",\r\n  \"HospitalName\": \"{{HospitalName}}\",\r\n  \"HospitalPincode\": \"{{HospitalPincode}}\",\r\n  \"HospitalStreet\": \"{{HospitalStreet}}\",\r\n  \"Lastname\": \"{{Lastname}}\"\r\n}\r\n\r\n// {\r\n//   \"ContactNumber\": \"3458391521\",\r\n//   \"DateOfBirth\": \"1991-06-20\",\r\n//   \"Education\": \"BE\",\r\n//   \"Email\": \"xdfe@gmail.com\",\r\n//   \"Firstname\": \"edfrw\",\r\n//   \"HospitalCity\": \"Tirur\",\r\n//   \"HospitalName\": \"Jaya\",\r\n//   \"HospitalPincode\": \"987654\",\r\n//   \"HospitalStreet\": \"Niram\",\r\n//   \"Lastname\": \"thre\"\r\n \r\n// }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/dietician",
									"host": [
										"{{url}}"
									],
									"path": [
										"dietician"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Dietician by DieticianId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log ('update patient id is ',pm.environment.get('dietIdForDietModule'))"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ContactNumber\": \"{{ContactNumber}}\",\r\n  \"DateOfBirth\": \"{{DateOfBirth}}\",\r\n  \"Education\": \"{{Education}}\",\r\n  \"Email\": \"{{Email}}\",\r\n  \"Firstname\": \"{{Firstname}}\",\r\n  \"HospitalCity\": \"{{HospitalCity}}\",\r\n  \"HospitalName\": \"{{HospitalName}}\",\r\n  \"HospitalPincode\": \"{{HospitalPincode}}\",\r\n  \"HospitalStreet\": \"{{HospitalStreet}}\",\r\n  \"Lastname\": \"{{Lastname}}\"\r\n}\r\n\r\n// {\r\n//   \"ContactNumber\": \"3456000021\",\r\n//   \"DateOfBirth\": \"1990-06-20\",\r\n//   \"Education\": \"BE\",\r\n//   \"Email\": \"dfe@gmail.com\",\r\n//   \"Firstname\": \"edfrw\",\r\n//   \"HospitalCity\": \"Tirur\",\r\n//   \"HospitalName\": \"Jaya\",\r\n//   \"HospitalPincode\": \"987654\",\r\n//   \"HospitalStreet\": \"Niram\",\r\n//   \"Lastname\": \"thre\"\r\n \r\n// }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/dietician/{{dietIdForDietModule}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"dietician",
										"{{dietIdForDietModule}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Dieticians by Admin",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/dietician",
									"host": [
										"{{url}}"
									],
									"path": [
										"dietician"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get DieticianId by Admin",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/dietician/{{dietIdForDietModule}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"dietician",
										"{{dietIdForDietModule}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Morbidities by Admin",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/morbidity",
									"host": [
										"{{url}}"
									],
									"path": [
										"morbidity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Morbidity by Testname By Admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let morbidityValues = pm.environment.get ('morbidityValues');\r",
											"if (!morbidityValues || morbidityValues===0) {\r",
											"   morbidityValues = ['Fasting Glucose','Average Glucose','Plasma Glucose','HbA1c','TSH','T3','T4'];\r",
											"};\r",
											"let currentMorbidity = morbidityValues.shift();\r",
											"console.log('current morbidity is ',currentMorbidity);\r",
											"pm.environment.set ('currentMorbidity',currentMorbidity);\r",
											"pm.environment.set ('morbidityValues',morbidityValues);\r",
											"\r",
											"\r",
											" \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let morbidityValue = pm.environment.get('morbidityValues');\r",
											"if (morbidityValue && morbidityValue.length > 0) {\r",
											"    pm.execution.setNextRequest ('Get Morbidity by Testname By Admin');\r",
											"}\r",
											"else {\r",
											"    pm.execution.setNextRequest ('Delete DietId by Admin');\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/morbidity/{{currentMorbidity}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"morbidity",
										"{{currentMorbidity}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete DietId by Admin",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/dietician/{{dietIdForDietModule}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"dietician",
										"{{dietIdForDietModule}}"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{adminToken}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Dietician Role",
					"item": [
						{
							"name": "Create Dietician Bearer Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"pm.environment.set('dieticianToken',response.token);\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"{{dieticianPswd}}\",\r\n  \"userLoginEmail\": \"{{dieticianEmail}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Patient",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"let fileIds = pm.environment.get('fileIds')||[];\r",
											"let fileId = Object.keys(response.FileMorbidity)[0];\r",
											"fileIds.push(fileId);\r",
											"pm.environment.set ('fileIds',fileIds);\r",
											"console.log('file id is ',fileId);\r",
											"pm.environment.set ('fileIdForDietRole',fileIds[0]);\r",
											"pm.environment.set ('fileIdForPatRole',fileIds[1]);\r",
											"let patientIds =pm.environment.get('patientIds')||[];\r",
											"let patientId = response.patientId;\r",
											"patientIds.push(patientId);\r",
											"pm.environment.set ('patientIds',patientIds);\r",
											"if (patientIds.length >= 2) {\r",
											"    pm.environment.set('patIdForDietRole', patientIds[0]);\r",
											"    pm.environment.set ('patIdForPatientRole',patientIds[1]);\r",
											"} else {\r",
											"    console.log('Not enough patient IDs available');\r",
											"}\r",
											"console.log('patient ids are ',patientIds);\r",
											"let patEmailId = response.Email;\r",
											"pm.environment.set ('patEmailId',patEmailId);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{{patientInfo}}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1ef53759-1c28-4c60-b90e-ab2b4cb51f55"
										}
									]
								},
								"url": {
									"raw": "{{url}}/patient",
									"host": [
										"{{url}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Patients",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();\r",
											"var patientIds = response.map(id=>id.patientId);\r",
											"console.log('patient Ids are ',patientIds);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/patient",
									"host": [
										"{{url}}"
									],
									"path": [
										"patient"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Patient by PatientId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{{patientInfo}}",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1ef53759-1c28-4c60-b90e-ab2b4cb51f55"
										},
										{
											"key": "vitals",
											"value": " \"{\n       “Weight“ : 67.9,\n       “Height” : 175.2,\n        “Temperature” : 98.6,\n        “SP” : 125,\n        “DP” : 85\n\t}\n",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/patient/{{patIdForDietRole}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"patient",
										"{{patIdForDietRole}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Patient Report",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "patientInfo",
											"value": "{{patientInfo}}",
											"type": "text"
										},
										{
											"key": "vitals",
											"value": "{\n       “Weight“ : 160.80,\n       “Height” : 63.50,\n        “Temperature” : 98.60,\n        “SP” : 85,\n        “DP” : 55\n \n             \t}\n",
											"type": "text",
											"disabled": true
										},
										{
											"key": "file",
											"type": "file",
											"src": "postman-cloud:///1ef51f3b-1af1-4940-9f79-10282f8b480d"
										}
									]
								},
								"url": {
									"raw": "{{url}}/patient/newReports/{{patIdForDietRole}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"patient",
										"newReports",
										"{{patIdForDietRole}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Patients Morbidity Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"let fileId = response[0].fileId;\r",
											"console.log ('file Id is ',fileId);\r",
											"//pm.environment.set ('patientFileId',fileId);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/patient/testReports/{{patIdForDietRole}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"patient",
										"testReports",
										"{{patIdForDietRole}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Patient File by Diet",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/patient/testReports/viewFile/{{fileIdForDietRole}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"{{fileIdForDietRole}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Morbidities by Dietician",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.unset('morbidityValues');"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/morbidity",
									"host": [
										"{{url}}"
									],
									"path": [
										"morbidity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Morbidity by Testname By Diet",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"let morbidityValues = pm.environment.get ('morbidityValues');\r",
											"if (!morbidityValues || morbidityValues===0) {\r",
											"   morbidityValues = ['Fasting Glucose','Average Glucose','Plasma Glucose','HbA1c','TSH','T3','T4'];\r",
											"};\r",
											"let currentMorbidity = morbidityValues.shift();\r",
											"console.log('current morbidity is ',currentMorbidity);\r",
											"pm.environment.set ('currentMorbidity',currentMorbidity);\r",
											"pm.environment.set ('morbidityValues',morbidityValues);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let morbidityValue = pm.environment.get('morbidityValues');\r",
											"if (morbidityValue && morbidityValue.length > 0) {\r",
											"    pm.execution.setNextRequest ('Get Morbidity by Testname By Diet');\r",
											"}\r",
											"else {\r",
											"    pm.execution.setNextRequest ('Get All Dieticians by Dietician');\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/morbidity/{{currentMorbidity}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"morbidity",
										"{{currentMorbidity}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Dieticians by Dietician",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/dietician",
									"host": [
										"{{url}}"
									],
									"path": [
										"dietician"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get DietId by Dietician",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/dietician/{{dietIdForDietRole}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"dietician",
										"{{dietIdForDietRole}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete PatId by Dietician",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/patient/{{patIdForDietRole}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"patient",
										"{{patIdForDietRole}}"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{dieticianToken}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Patient Role",
					"item": [
						{
							"name": "Create Patient Bearer Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"pm.environment.set('patientToken',response.token);\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"{{patientPswd}}\",\r\n  \"userLoginEmail\": \"{{patEmailId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Test Report by Patient",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/patient/testReports/{{patIdForPatientRole}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"patient",
										"testReports",
										"{{patIdForPatientRole}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get File by Patient",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/patient/testReports/viewFile/{{fileIdForPatRole}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"patient",
										"testReports",
										"viewFile",
										"{{fileIdForPatRole}}"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{patientToken}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "LogOut by Admin",
					"item": [
						{
							"name": "Delete PatientId",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{dieticianToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/patient/{{patIdForPatientRole}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"patient",
										"{{patIdForPatientRole}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete DieticianId",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/dietician/{{dietIdForDietRole}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"dietician",
										"{{dietIdForDietRole}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "LogOut",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.unset('morbidityValues');\r",
											"pm.environment.unset('dieticianIds');\r",
											"pm.environment.unset('dietIdForDietModule');\r",
											"pm.environment.unset('dietIdForDietRole');\r",
											"pm.environment.unset('currentMorbidity');\r",
											"pm.environment.unset('fileIds');\r",
											"pm.environment.unset('fileIdForDietRole');\r",
											"pm.environment.unset('fileIdForPatRole');\r",
											"pm.environment.unset('patientIds');\r",
											"pm.environment.unset('patIdForDietRole');\r",
											"pm.environment.unset('patIdForPatientRole');\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/logoutdietician",
									"host": [
										"{{url}}"
									],
									"path": [
										"logoutdietician"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{adminToken}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"reusableValidatons = {\r",
					"postPutHeaderTest: function() { \r",
					"    //test header presence\r",
					"    pm. test (\"Content-Type header is present\", () => {\r",
					"    pm.response.to.have.header (\"Content-Type\");\r",
					"    });\r",
					"\r",
					"    //test header content\r",
					"    pm.test (\"Content-Type header is application/json\", () => {\r",
					"    pm.expect (pm.response.headers.get ('Content-Type')) .to.include('application/json');\r",
					"    });\r",
					"},\r",
					"\r",
					"postPutCommonTests: function() {\r",
					"    //test response time\r",
					"        pm.test(\"Response time is less than 1000ms\", ()=> {\r",
					"        pm.expect (pm.response.responseTime).to.be.below(500);\r",
					"        });\r",
					"    }\r",
					"}"
				]
			}
		}
	]
}